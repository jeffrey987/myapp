<template>
	<view>	
		<uni-section title="swipe-action 列表" type="line"></uni-section>
		<uni-swipe-action>
			<uni-swipe-action-item v-for="(item,index) in swipeList" :show="isOpened" :options="item.options" :key="item.id" @change="swipeChange" @click="swipeClick($event,index)">
				<text class="cont">{{item.content}}</text>
			</uni-swipe-action-item>
		</uni-swipe-action>
	</view>
</template>

<script>
	import uniSection from '@/components/uni-section/uni-section.vue'
	import uniSwipeAction from '@/components/uni-swipe-action/uni-swipe-action.vue'
	import uniSwipeActionItem from '@/components/uni-swipe-action-item/uni-swipe-action-item.vue'
	export default {
		components: {
			uniSection,
			uniSwipeAction,
			uniSwipeActionItem
		},
		data() {
			return {
				isOpened: false,			
				swipeList: [{
					options: [{
						text: '添加',
						style: {
							backgroundColor: 'rgb(255,58,49)'
						}
					}],
					id: 0,
					content: 'item1'
				}, {
					id: 1,
					options: [{
						text: '置顶'
					}, {
						text: '删除',
						style: {
							backgroundColor: 'rgb(255,58,49)'
						}
					}],
					content: 'item2'
				}, {
					id: 2,
					options: [{
						text: '置顶'
					}, {
						text: '标记为已读',
						style: {
							backgroundColor: 'rgb(254,156,1)'
						}
					}, {
						text: '删除',
						style: {
							backgroundColor: 'rgb(255,58,49)'
						}
					}],
					content: 'item3'
				}]
				// options3: [{
				// 	text: '置顶'
				// }, {
				// 	text: '标记为已读',
				// 	style: {
				// 		backgroundColor: 'rgb(254,156,1)'
				// 	}
				// }, {
				// 	text: '删除',
				// 	style: {
				// 		backgroundColor: 'rgb(255,58,49)'
				// 	}
				// }]
			}
		},
		onReady() {
			this.$nextTick(() => {
				this.isOpened = true
			})
		},
		methods: {
			bindClick(e) {
				uni.showToast({
					title: `点击了${e.content.text}按钮`,
					icon: 'none'
				})
			},
			setOpened() {
				this.isOpened = !this.isOpened
			},
			change(e) {
				this.isOpened = e
				console.log('...返回：', e);
			},
			swipeChange(e) {
				console.log('...返回：', e);
			},
			swipeClick(e, index) {
				let {
					content
				} = e
				if (content.text === '删除') {
					console.log(content.text, index);
					uni.showModal({
						title: '提示',
						content: '是否删除',
						success: (res) => {
							if (res.confirm) {
								this.swipeList.splice(index, 1)
							} else if (res.cancel) {
								console.log('用户点击取消');
							}
						}
					});
				} else if (content.text === '添加') {
					if (this.swipeList.length < 10) {
						this.swipeList.push({
							id: new Date().getTime(),
							options: [{
								text: '置顶'
							}, {
								text: '标记为已读',
								style: {
									backgroundColor: 'rgb(254,156,1)'
								}
							}, {
								text: '删除',
								style: {
									backgroundColor: 'rgb(255,58,49)'
								}
							}],
							content: '新增'
						})
						uni.showToast({
							title: `添加了一条数据`,
							icon: 'none'
						})
					} else {
						uni.showToast({
							title: `最多添加十条数据`,
							icon: 'none'
						})
					}
				} else {
					uni.showToast({
						title: `点击了${e.content.text}按钮`,
						icon: 'none'
					})
				}

			}
		}
	}
</script>

<style>
	@import "index.css";	
</style>